
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/coast/land_and_water.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_coast_land_and_water.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_coast_land_and_water.py:


Color land and water
--------------------

The ``land`` and ``water`` arguments of :meth:`pygmt.Figure.coast` specify a color to
fill in the land and water masses, respectively. You can use standard GMT color names or
give a hex value (like ``#333333``).

.. GENERATED FROM PYTHON SOURCE LINES 9-17



.. image:: /gallery/coast/images/sphx_glr_land_and_water_001.png
    :alt: land and water
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>





|

.. code-block:: default

    import pygmt

    fig = pygmt.Figure()
    # Make a global Mollweide map with automatic ticks
    fig.basemap(region="g", projection="W15c", frame=True)
    # Plot the land as light gray, and the water as sky blue
    fig.coast(land="#666666", water="skyblue")
    fig.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.471 seconds)


.. _sphx_glr_download_gallery_coast_land_and_water.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: land_and_water.py <land_and_water.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: land_and_water.ipynb <land_and_water.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
