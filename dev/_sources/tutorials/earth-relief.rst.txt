
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/earth-relief.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_tutorials_earth-relief.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_earth-relief.py:


Plotting Earth relief
=====================

Plotting a map of Earth relief can use the data accessed by the
:meth:`pygmt.datasets.load_earth_relief` method. The data can then be plotted using the
:meth:`pygmt.Figure.grdimage` method.

.. note::

    This tutorial assumes the use of a Python notebook, such as IPython or Jupyter Notebook.
    To see the figures while using a Python script instead, use
    ``fig.show(method="external")`` to display the figure in the default PDF viewer.

    To save the figure, use ``fig.savefig("figname.pdf")`` where ``"figname.pdf"``
    is the desired name and file extension for the saved figure.

.. GENERATED FROM PYTHON SOURCE LINES 18-21

.. code-block:: default


    import pygmt








.. GENERATED FROM PYTHON SOURCE LINES 23-26

Load sample Earth relief data for the entire globe at a resolution of 1 arc degree.
The other available resolutions are show
at :gmt-docs:`datasets/remote-data.html#global-earth-relief-grids`.

.. GENERATED FROM PYTHON SOURCE LINES 26-28

.. code-block:: default

    grid = pygmt.datasets.load_earth_relief(resolution="01d")








.. GENERATED FROM PYTHON SOURCE LINES 29-36

Create a plot
-------------

The :meth:`pygmt.Figure.grdimage` method takes the ``grid`` input to
create a figure. It creates and applies a color palette to the figure based upon the
z-values of the data. By default, it plots the map with the *turbo* CPT, an
equidistant cylindrical projection, and with no frame.

.. GENERATED FROM PYTHON SOURCE LINES 36-41

.. code-block:: default


    fig = pygmt.Figure()
    fig.grdimage(grid=grid)
    fig.show()




.. image:: /tutorials/images/sphx_glr_earth-relief_001.png
    :alt: earth relief
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 42-46

:meth:`pygmt.Figure.grdimage` can take the optional argument ``projection`` for the
map. In the example below, the ``projection`` is set as ``R12c`` for 12 centimeter
figure with a Winkel Tripel projection. For a list of available projections,
see :gmt-docs:`cookbook/map-projections.html`.

.. GENERATED FROM PYTHON SOURCE LINES 47-52

.. code-block:: default


    fig = pygmt.Figure()
    fig.grdimage(grid=grid, projection="R12c")
    fig.show()




.. image:: /tutorials/images/sphx_glr_earth-relief_002.png
    :alt: earth relief
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 53-59

Set a color map
---------------

:meth:`pygmt.Figure.grdimage` takes the ``cmap`` argument to set the CPT of the
figure. Examples of common CPTs for Earth relief are shown below.
A full list of CPTs can be found at :gmt-docs:`cookbook/cpts.html`.

.. GENERATED FROM PYTHON SOURCE LINES 61-62

Using the *geo* CPT:

.. GENERATED FROM PYTHON SOURCE LINES 63-68

.. code-block:: default


    fig = pygmt.Figure()
    fig.grdimage(grid=grid, projection="R12c", cmap="geo")
    fig.show()




.. image:: /tutorials/images/sphx_glr_earth-relief_003.png
    :alt: earth relief
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 69-70

Using the *relief* CPT:

.. GENERATED FROM PYTHON SOURCE LINES 71-76

.. code-block:: default


    fig = pygmt.Figure()
    fig.grdimage(grid=grid, projection="R12c", cmap="relief")
    fig.show()




.. image:: /tutorials/images/sphx_glr_earth-relief_004.png
    :alt: earth relief
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 77-87

Add a color bar
---------------

The :meth:`pygmt.Figure.colorbar` method displays the CPT and the associated Z-values
of the figure, and by default uses the same CPT set by the ``cmap`` argument
for :meth:`pygmt.Figure.grdimage`. The ``frame`` argument for
:meth:`pygmt.Figure.colorbar` can be used to set the axis intervals and labels. A
list is used to pass multiple arguments to ``frame``. In the example below,
``a2500`` sets the axis interval to 2,500, ``x+lElevation`` sets the x-axis
label, and ``y+lm`` sets the y-axis label.

.. GENERATED FROM PYTHON SOURCE LINES 87-93

.. code-block:: default


    fig = pygmt.Figure()
    fig.grdimage(grid=grid, projection="R12c", cmap="geo")
    fig.colorbar(frame=["a2500", "x+lElevation", "y+lm"])
    fig.show()




.. image:: /tutorials/images/sphx_glr_earth-relief_005.png
    :alt: earth relief
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 94-106

Create a region map
-------------------

In addition to providing global data, the ``region`` argument for
:meth:`pygmt.datasets.load_earth_relief` can be used to provide data for a specific
area. The ``region`` argument is required for resolutions at 5 arc minutes or higher,
and accepts a list (as in the example below) or a string. The geographic ranges are
passed as *xmin*/*xmax*/*ymin*/*ymax*.

The example below uses data with a 10 arc minute resolution, and plots it on a
15 centimeter figure with a Mercator projection and a CPT set to *geo*.
``frame="a"`` is used to add a frame to the figure.

.. GENERATED FROM PYTHON SOURCE LINES 106-112

.. code-block:: default


    grid = pygmt.datasets.load_earth_relief(resolution="10m", region=[-14, 30, 35, 60])
    fig = pygmt.Figure()
    fig.grdimage(grid=grid, projection="M15c", frame="a", cmap="geo")
    fig.colorbar(frame=["a1000", "x+lElevation", "y+lm"])
    fig.show()



.. image:: /tutorials/images/sphx_glr_earth-relief_006.png
    :alt: earth relief
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  8.188 seconds)


.. _sphx_glr_download_tutorials_earth-relief.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: earth-relief.py <earth-relief.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: earth-relief.ipynb <earth-relief.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
