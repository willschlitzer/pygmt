
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/coastlines.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_tutorials_coastlines.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_coastlines.py:


Coastlines and borders
======================

Plotting coastlines and borders is handled by :meth:`pygmt.Figure.coast`.

.. note::

    This tutorial assumes the use of a Python notebook, such as IPython or Jupyter Notebook.
    To see the figures while using a Python script instead, use
    ``fig.show(method="external")`` to display the figure in the default PDF viewer.

    To save the figure, use ``fig.savefig("figname.pdf")`` where ``"figname.pdf"``
    is the desired name and file extension for the saved figure.

.. GENERATED FROM PYTHON SOURCE LINES 16-19

.. code-block:: default


    import pygmt








.. GENERATED FROM PYTHON SOURCE LINES 21-25

Shorelines
----------

Use the ``shorelines`` argument to plot only the shorelines:

.. GENERATED FROM PYTHON SOURCE LINES 25-31

.. code-block:: default


    fig = pygmt.Figure()
    fig.basemap(region="g", projection="W15c", frame=True)
    fig.coast(shorelines=True)
    fig.show()




.. image:: /tutorials/images/sphx_glr_coastlines_001.png
    :alt: coastlines
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 32-42

The shorelines are divided in 4 levels:

1. coastline
2. lakeshore
3. island-in-lake shore
4. lake-in-island-in-lake shore

You can specify which level you want to plot by passing the level number and a GMT pen
configuration. For example, to plot just the coastlines with 0.5 thickness and black
lines:

.. GENERATED FROM PYTHON SOURCE LINES 42-48

.. code-block:: default


    fig = pygmt.Figure()
    fig.basemap(region="g", projection="W15c", frame=True)
    fig.coast(shorelines="1/0.5p,black")
    fig.show()




.. image:: /tutorials/images/sphx_glr_coastlines_002.png
    :alt: coastlines
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 49-51

You can specify multiple levels (with their own pens) by passing a list to
``shorelines``:

.. GENERATED FROM PYTHON SOURCE LINES 51-57

.. code-block:: default


    fig = pygmt.Figure()
    fig.basemap(region="g", projection="W15c", frame=True)
    fig.coast(shorelines=["1/1p,black", "2/0.5p,red"])
    fig.show()




.. image:: /tutorials/images/sphx_glr_coastlines_003.png
    :alt: coastlines
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 58-69

Resolutions
-----------

The coastline database comes with 5 resolutions. The resolution drops by 80% between
levels:

1. ``"c"``: crude
2. ``"l"``: low (default)
3. ``"i"``: intermediate
4. ``"h"``: high
5. ``"f"``: full

.. GENERATED FROM PYTHON SOURCE LINES 69-77

.. code-block:: default


    oahu = [-158.3, -157.6, 21.2, 21.8]
    fig = pygmt.Figure()
    for res in ["c", "l", "i", "h", "f"]:
        fig.coast(resolution=res, shorelines="1p", region=oahu, projection="M5c")
        fig.shift_origin(xshift="5c")
    fig.show()




.. image:: /tutorials/images/sphx_glr_coastlines_004.png
    :alt: coastlines
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 78-84

Land and water
--------------

Use the ``land`` and ``water`` arguments to specify a fill color for land and water
bodies. The colors can be given by name or hex codes (like the ones used in HTML and
CSS):

.. GENERATED FROM PYTHON SOURCE LINES 84-89

.. code-block:: default


    fig = pygmt.Figure()
    fig.basemap(region="g", projection="W10i", frame=True)
    fig.coast(land="#666666", water="skyblue")
    fig.show()



.. image:: /tutorials/images/sphx_glr_coastlines_005.png
    :alt: coastlines
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  9.024 seconds)


.. _sphx_glr_download_tutorials_coastlines.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: coastlines.py <coastlines.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: coastlines.ipynb <coastlines.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
